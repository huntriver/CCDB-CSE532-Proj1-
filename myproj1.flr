/* Xinhe Huang 108390641 xinhe.huang@stonybrook.edu */
/* I pledge my honor that all parts of this project were done by me individually and without collaboration with others. */

/*Person(Name,Id,Nid).*/
/*Key: Id.*/

Person(Ann,p1,p1 - Ann).
Person(John,p2,p2 - John).
Person(Joe,p3,p3 - Joe).
Person(May,p4,p4 - May).
Person(Bob,p5,p5 - Bob).
Person(Faye,p6,p6 - Faye).
Person(Bill,p7,p7 - Bill).
Person(Sally,p8,p8 - Sally).
Person(Miriam,p9,p9 - Miriam).
Person(April,p10,p10 - April).

/*Orgn(Name,Id).*/
/*Key: Id.*/

Orgn(Acme,o1).
Orgn(GoodMood,o2).
Orgn(SuperiorCruft,o3).
Orgn(AwesomeProducts,o4).

/*Sign(OId,UId).*/
/*Key: (OId,UId).*/

Sign(o1,p4).
Sign(o1,p3).
Sign(o2,p1).
Sign(o2,p4).
Sign(o3,p5).
Sign(o4,p1).
Sign(o4,p6).
Sign(o4,p7).


/*Card(Id,OwnerId,Balance,Limit).*/
/*Key: Id.*/

Card(c1,o1,10001,11000).
Card(c2,o2,18000,26000).
Card(c3,o3,27500,28000).
Card(c4,o4,26500,27200).
Card(c5,p1,1000,26000).
Card(c6,p3,5000,28000).
Card(c7,p5,5000,20000).
Card(c8,p4,5000,26000).
Card(c9,p6,3000,25000).
Card(c10,p7,4000,30000).
Card(c11,p9,4000,30000).
Card(c12,p10,4000,30000).
Card(c13,p9,1000,10000).
Card(c14,p9,2000,10000).
Card(c15,p9,2000,50000).
Card(c16,p8,2000,24000).
Card(c17,p8,0,24000).
Card(c18,p8,110,2000).
Card(c19,p8,220,2000).

/*Auser(AId,CId).*/
/*Key: (AId,CId).*/

Auser(p2,c2).
Auser(p3,c10).
Auser(p4,c10).
Auser(p6,c12).
Auser(p7,c5).
Auser(p8,c1).
Auser(p8,c2).
Auser(p8,c3).
Auser(p9,c1).
Auser(p9,c2).
Auser(p9,c3).
Auser(p10,c4).

/*add the person with the signature authority of any orgnization to the authorized user table*/
authuser(?U,?C):- Auser(?U,?C); 
				  Sign(?_OId,?U),Card(?C,?_OId,?_,?_).

Query1(?usr,?siner):- 
	Auser(?uid,?cid), 
	Card(?cid,?oid,?bal,?limit),
	Orgn(?_,?oid),
	Sign(?oid,?signer),
	?limit-?bal<1000,
	Person(?_,?uid,?usr),
	Person(?_,?signer,?siner) ,
	?uid!=?signer.

Query2(?user):- 
	count{?cid[?ownerId]|Card(?cid,?ownerId,?_bal,?_limit)}>=4,  
	count{?cid1[?aId]|authuser(?aId,?cid1)}>=3,  
	Person(?_,?ownerId,?user),
	Person(?_,?aId,?user).

Query3(?card):- 
	Card(?card,?owenerId,?_,?_),
	Orgn(?_,?owenerId),
  	Sign(?owenerId,?user) ~~> (
  		exist(?_cid1)^(
  			Card(?_cid1,?user,?_bal,?_limit),  
      		?_limit>=25000
      	)
     
   ).

/*define direct user and indirect user before querry*/
direct(?U,?C):- authuser(?U,?C).

indirect(?U,?C):- 
	direct(?U,?C);
 	direct(?U,?C2),Card(?C2,?_owner,?_,?_),indirect(?_owner,?C).	

Query4(?user,?card):- indirect(?_U,?card),Person(?_,?_U,?user).	


Query5(?total_balance):- 
	?total_balance = sum{?bal|Card(?cid,?_,?bal,?_),indirect(p3,?cid)}.


?- writeln('\n--- Query 1 answers ---')@\plg,
Query1(?usr,?siner).

?- writeln('\n--- Query 2 answers ---')@\plg,
Query2(?user).

?- writeln('\n--- Query 3 answers ---')@\plg,
Query3(?card).

?- writeln('\n--- Query 4 answers ---')@\plg,
Query4(?user,?card).

?- writeln('\n--- Query 5 answers ---')@\plg,
Query5(?total_balance).