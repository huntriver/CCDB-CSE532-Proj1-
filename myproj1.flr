person(Ann,p1 - Ann).
person(John,p2 - John).
person(Joe,p3 - Joe).
person(May,p4 - May).
person(Bob,p5 - Bob).
person(Faye,p6 - Faye).
person(Bill,p7 - Bill).
person(Sally,p8 - Sally).
person(Miriam,p9 - Miriam).
person(April,p10 - April).

orgn(Acme,o1).
orgn(GoodMood,o2).
orgn(SuperiorCruft,o3).
orgn(AwesomeProducts,o4).


sign(Acme,May).
sign(Acme,Joe).
sign(GoodMood,Ann).
sign(GoodMood,May).
sign(SuperiorCruft,Bob).
sign(AwesomeProducts,Ann).
sign(AwesomeProducts,Faye).
sign(AwesomeProducts,Bill).


card(c1,Acme,10001,11000).
card(c2,GoodMood,18000,26000).
card(c3,SuperiorCruft,27500,28000).
card(c4,AwesomeProducts,26500,27200).
card(c5,Ann,1000,26000).
card(c6,Joe,5000,28000).
card(c7,Bob,5000,20000).
card(c8,May,5000,20000).
card(c9,Faye,3000,25000).
card(c10,Bill,4000,30000).
card(c11,Miriam,4000,30000).
card(c12,April,4000,30000).
card(c13,Miriam,1000,10000).
card(c14,Miriam,2000,10000).
card(c15,Miriam,2000,50000).
card(c16,Sally,2000,24000).
card(c17,Sally,0,24000).
card(c18,Sally,110,2000).
card(c19,Sally,220,2000).

auser(John,c2).
auser(Joe,c10).
auser(May,c10).
auser(Faye,c12).
auser(Bill,c5).
auser(Sally,c1).
auser(Sally,c2).
auser(Sally,c3).
auser(Miriam,c1).
auser(Miriam,c2).
auser(Miriam,c3).
auser(April,c4).

Query1(?usr,?siner):- auser(?user,?cid), card(?cid,?cName,?bal,?limit),orgn(?cName,?_oid),sign(?cName,?signer),?limit-?bal<1000,person(?user,?usr),person(?signer,?siner).

Query2(?user):- count{?cid[?cName]|card(?cid,?cName,?_bal,?_limit)}>=4,  count{?cid1[?aName]|auser(?aName,?cid1)}>=3,  person(?cName,?user) ,person (?aName,?user).

Query3(?cid):- card(?cid,?oName,?_bal,?_limit), forall(?user)^exist(?cid1)^(sign(?oName,?user),card(?cid1,?user,?_bal1,?limit),?limit>=25000).


?- writeln('\n--- Query 1 answers ---')@\plg,
Query1(?usr,?siner).

?- writeln('\n--- Query 2 answers ---')@\plg,
Query2(?user).

?- writeln('\n--- Query 3 answers ---')@\plg,
Query3(?card).
